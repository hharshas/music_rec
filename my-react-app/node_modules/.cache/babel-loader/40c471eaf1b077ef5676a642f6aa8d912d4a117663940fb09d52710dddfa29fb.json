{"ast":null,"code":"var _jsxFileName = \"/home/harsh/testinghack/react_frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const handleChange = event => {\n    const value = event.target.value;\n    setInputValue(value);\n    // Fetch suggestions from the server\n    fetchSuggestions(value);\n  };\n  const fetchSuggestions = async query => {\n    try {\n      const response = await fetch(`http://localhost:5000/autocomplete?query=${query}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch suggestions');\n      }\n      const data = await response.json();\n      setSuggestions(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSuggestionClick = value => {\n    setInputValue(value);\n    setSuggestions([]);\n  };\n  const handleRecommendation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          music_title: inputValue\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch recommendations');\n      }\n      const data = await response.json();\n      console.log(data); // Handle recommendations data\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleChange,\n      placeholder: \"Enter a music title...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion\",\n        onClick: () => handleSuggestionClick(suggestion),\n        children: suggestion\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRecommendation,\n      children: \"Recommend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+DOYf/qBz2ySRonOobbdzztR9JE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","suggestions","setSuggestions","handleChange","event","value","target","fetchSuggestions","query","response","fetch","ok","Error","data","json","error","console","handleSuggestionClick","handleRecommendation","method","headers","body","JSON","stringify","music_title","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","suggestion","index","onClick","_c","$RefreshReg$"],"sources":["/home/harsh/testinghack/react_frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n\n  const handleChange = (event) => {\n    const value = event.target.value;\n    setInputValue(value);\n    // Fetch suggestions from the server\n    fetchSuggestions(value);\n  };\n\n  const fetchSuggestions = async (query) => {\n    try {\n      const response = await fetch(`http://localhost:5000/autocomplete?query=${query}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch suggestions');\n      }\n      const data = await response.json();\n      setSuggestions(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSuggestionClick = (value) => {\n    setInputValue(value);\n    setSuggestions([]);\n  };\n\n  const handleRecommendation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ music_title: inputValue })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch recommendations');\n      }\n      const data = await response.json();\n      console.log(data); // Handle recommendations data\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>App</h1>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        placeholder=\"Enter a music title...\"\n      />\n      <div className=\"suggestions\">\n        {suggestions.map((suggestion, index) => (\n          <div\n            key={index}\n            className=\"suggestion\"\n            onClick={() => handleSuggestionClick(suggestion)}\n          >\n            {suggestion}\n          </div>\n        ))}\n      </div>\n      <button onClick={handleRecommendation}>\n        Recommend\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}