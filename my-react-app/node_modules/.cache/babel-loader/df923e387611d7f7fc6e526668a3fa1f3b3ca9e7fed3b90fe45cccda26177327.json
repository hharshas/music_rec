{"ast":null,"code":"var _jsxFileName = \"/home/harsh/testinghack/react_frontend/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const handleChange = async event => {\n    const value = event.target.value;\n    setInputValue(value);\n    // Fetch suggestions from the server only if input value is not empty\n    if (value.trim() !== '') {\n      fetchSuggestions(value);\n    } else {\n      // Clear suggestions when input value is empty\n      setSuggestions([]);\n    }\n  };\n  const fetchSuggestions = async query => {\n    try {\n      const response = await fetch(`http://localhost:5000/autocomplete?query=${query}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch suggestions');\n      }\n      const data = await response.json();\n      setSuggestions(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleSuggestionClick = value => {\n    setInputValue(value);\n    setSuggestions([]);\n  };\n  const handleRecommendation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          music_title: inputValue\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch recommendations');\n      }\n      const data = await response.json();\n      setRecommendations(data.recommendations); // Update recommendations state\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music Recommendation System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleChange,\n      placeholder: \"Enter a music title...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: suggestions.slice(0, 4).map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"suggestion\",\n          onClick: () => handleSuggestionClick(suggestion),\n          children: suggestion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRecommendation,\n      children: \"Recommend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recommended Music:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recommendations.map((recommendation, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: recommendation\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"b6xGS4dI/SNz/UsaEEjBsNL5g+4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","inputValue","setInputValue","suggestions","setSuggestions","recommendations","setRecommendations","handleChange","event","value","target","trim","fetchSuggestions","query","response","fetch","ok","Error","data","json","error","console","handleSuggestionClick","handleRecommendation","method","headers","body","JSON","stringify","music_title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","slice","map","suggestion","index","onClick","recommendation","_c","$RefreshReg$"],"sources":["/home/harsh/testinghack/react_frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n\n  const handleChange = async (event) => {\n    const value = event.target.value;\n    setInputValue(value);\n    // Fetch suggestions from the server only if input value is not empty\n    if (value.trim() !== '') {\n      fetchSuggestions(value);\n    } else {\n      // Clear suggestions when input value is empty\n      setSuggestions([]);\n    }\n  };\n\n  const fetchSuggestions = async (query) => {\n    try {\n      const response = await fetch(`http://localhost:5000/autocomplete?query=${query}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch suggestions');\n      }\n      const data = await response.json();\n      setSuggestions(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSuggestionClick = (value) => {\n    setInputValue(value);\n    setSuggestions([]);\n  };\n\n  const handleRecommendation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ music_title: inputValue })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch recommendations');\n      }\n      const data = await response.json();\n      setRecommendations(data.recommendations); // Update recommendations state\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Music Recommendation System</h1>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        placeholder=\"Enter a music title...\"\n      />\n      <div className=\"suggestions\">\n        <ul>\n          {suggestions.slice(0, 4).map((suggestion, index) => (\n            <li\n              key={index}\n              className=\"suggestion\"\n              onClick={() => handleSuggestionClick(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <button onClick={handleRecommendation}>\n        Recommend\n      </button>\n      <div>\n        <h2>Recommended Music:</h2>\n        <ul>\n          {recommendations.map((recommendation, index) => (\n            <li key={index}>{recommendation}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}